{"ast":null,"code":"import { FETCHING_CART, ADD_TO_CART_SUCCESS, CLEAR_ERROR_MESSAGE, FETCHING_CART_SUCCESS, FETCHING_CART_FAILURE, PAY_TOTAL_FAILURE, PAID_TOTAL_SUCCESSFULLY } from './types';\nimport axios from 'axios';\nimport CartService from '../services/cart.service';\nexport const fetchingCart = () => {\n  return {\n    type: FETCHING_CART\n  };\n};\nexport const addToCartSuccess = () => {\n  return {\n    type: ADD_TO_CART_SUCCESS,\n    message: 'Added to cart.'\n  };\n};\nexport const clearMessage = () => {\n  return {\n    type: CLEAR_ERROR_MESSAGE\n  };\n};\nexport const fetchingCartSuccess = cart => {\n  return {\n    type: FETCHING_CART_SUCCESS,\n    cart\n  };\n};\nexport const fetchingCartError = error => {\n  return {\n    type: FETCHING_CART_FAILURE,\n    error\n  };\n};\nexport const failedToPay = error => {\n  return {\n    type: PAY_TOTAL_FAILURE,\n    error\n  };\n};\nexport const successfullyPaid = () => {\n  return {\n    type: PAID_TOTAL_SUCCESSFULLY\n  };\n};\nexport function addToCart(id, prevCart) {\n  return function (dispatch) {\n    return axios.get(`http://localhost:3001/api/products/${id}`).then(res => {\n      dispatch({\n        type: ADD_TO_CART_SUCCESS,\n        cart: [...prevCart, ...res.data]\n      }); //   return setTimeout(() => {\n      // \tdispatch(clearMessage());\n      //   }, 5000);\n    }).catch(err => {\n      let error = 'Could not add the product.'; // if (err.response && err.response.data && err.response.data) {\n      //   error = err.response.data;\n      // }\n\n      dispatch(fetchingCartError(error));\n      return setTimeout(() => {\n        dispatch(clearMessage());\n      }, 5000);\n    });\n  };\n}\nexport const fetchCart = () => dispatch => {\n  dispatch(fetchingCart());\n  return CartService.fetchCart().then(res => dispatch(fetchingCartSuccess(res.data[0]))).catch(err => {\n    let error = 'Could not get the cart infomation.'; // if (err.response && err.response.data && err.response.data) {\n    //   error = err.response.data;\n    // }\n\n    return dispatch(fetchingCartError(error));\n  });\n};\nexport const deletefromCart = id => dispatch => {\n  dispatch(fetchingCart());\n  return CartService.deletefromCart().then(res => dispatch(fetchingCartSuccess(res.data[0]))).catch(err => {\n    let error = 'Could not remove the product.'; // if (err.response && err.response.data && err.response.data) {\n    //   error = err.response.data;\n    // }\n\n    return dispatch(fetchingCartError(error));\n  });\n}; // export const payTotal = (cartObject) => (dispatch) => {\n// \treturn CartService.payTotal()\n// \t\t.then((res) => {\n// \t\t\tdispatch(successfullyPaid());\n// \t\t\treturn browserHistory.push('/account');\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tlet error = 'Could not purchase them.';\n// \t\t\t// if (err.response && err.response.data && err.response.data) {\n// \t\t\t//   error = err.response.data;\n// \t\t\t// }\n// \t\t\treturn dispatch(failedToPay(error));\n// \t\t});\n// };","map":{"version":3,"sources":["/home/kenny/ecommerce-redux-front/src/actions/cart.action.js"],"names":["FETCHING_CART","ADD_TO_CART_SUCCESS","CLEAR_ERROR_MESSAGE","FETCHING_CART_SUCCESS","FETCHING_CART_FAILURE","PAY_TOTAL_FAILURE","PAID_TOTAL_SUCCESSFULLY","axios","CartService","fetchingCart","type","addToCartSuccess","message","clearMessage","fetchingCartSuccess","cart","fetchingCartError","error","failedToPay","successfullyPaid","addToCart","id","prevCart","dispatch","get","then","res","data","catch","err","setTimeout","fetchCart","deletefromCart"],"mappings":"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","sourcesContent":["import {\n\tFETCHING_CART,\n\tADD_TO_CART_SUCCESS,\n\tCLEAR_ERROR_MESSAGE,\n\tFETCHING_CART_SUCCESS,\n\tFETCHING_CART_FAILURE,\n\tPAY_TOTAL_FAILURE,\n\tPAID_TOTAL_SUCCESSFULLY\n} from './types';\nimport axios from 'axios'\nimport CartService from '../services/cart.service';\n\nexport const fetchingCart = () => {\n\treturn {\n\t\ttype: FETCHING_CART\n\t};\n};\n\nexport const addToCartSuccess = () => {\n\treturn {\n\t\ttype: ADD_TO_CART_SUCCESS,\n\t\tmessage: 'Added to cart.'\n\t};\n};\n\nexport const clearMessage = () => {\n\treturn {\n\t\ttype: CLEAR_ERROR_MESSAGE\n\t};\n};\n\nexport const fetchingCartSuccess = (cart) => {\n\treturn {\n\t\ttype: FETCHING_CART_SUCCESS,\n\t\tcart\n\t};\n};\n\nexport const fetchingCartError = (error) => {\n\treturn {\n\t\ttype: FETCHING_CART_FAILURE,\n\t\terror\n\t};\n};\n\nexport const failedToPay = (error) => {\n\treturn {\n\t\ttype: PAY_TOTAL_FAILURE,\n\t\terror\n\t};\n};\n\nexport const successfullyPaid = () => {\n\treturn {\n\t\ttype: PAID_TOTAL_SUCCESSFULLY\n\t};\n};\n\nexport function addToCart (id, prevCart) {\n\treturn function (dispatch) {\n\t  return axios.get(`http://localhost:3001/api/products/${id}`)\n\t\t.then(res => {\n\t\t  dispatch({\n\t\t\ttype: ADD_TO_CART_SUCCESS,\n\t\t\tcart : [...prevCart, ...res.data]\n\t\t})\n\t\t//   return setTimeout(() => {\n\t\t// \tdispatch(clearMessage());\n\t\t//   }, 5000);\n\t\t})\n\t\t.catch((err) => {\n\t\t  let error = 'Could not add the product.';\n\t\t  // if (err.response && err.response.data && err.response.data) {\n\t\t  //   error = err.response.data;\n\t\t  // }\n\t\t  dispatch(fetchingCartError(error));\n\t\t  return setTimeout(() => {\n\t\t\tdispatch(clearMessage());\n\t\t  }, 5000);\n\t\t});\n\t};\n  }\n  \n\nexport const fetchCart = () => (dispatch) => {\n\tdispatch(fetchingCart());\n\treturn CartService.fetchCart()\n\t.then((res) => dispatch(fetchingCartSuccess(res.data[0])))\n\t.catch((err) => {\n\t\tlet error = 'Could not get the cart infomation.';\n\t\t// if (err.response && err.response.data && err.response.data) {\n\t\t//   error = err.response.data;\n\t\t// }\n\t\treturn dispatch(fetchingCartError(error));\n\t});\n};\n\nexport const deletefromCart = (id) => (dispatch) => {\n\tdispatch(fetchingCart());\n\treturn CartService.deletefromCart()\n\t.then((res) => dispatch(fetchingCartSuccess(res.data[0])))\n\t.catch((err) => {\n\t\tlet error = 'Could not remove the product.';\n\t\t// if (err.response && err.response.data && err.response.data) {\n\t\t//   error = err.response.data;\n\t\t// }\n\t\treturn dispatch(fetchingCartError(error));\n\t});\n};\n\n// export const payTotal = (cartObject) => (dispatch) => {\n// \treturn CartService.payTotal()\n// \t\t.then((res) => {\n// \t\t\tdispatch(successfullyPaid());\n// \t\t\treturn browserHistory.push('/account');\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tlet error = 'Could not purchase them.';\n// \t\t\t// if (err.response && err.response.data && err.response.data) {\n// \t\t\t//   error = err.response.data;\n// \t\t\t// }\n// \t\t\treturn dispatch(failedToPay(error));\n// \t\t});\n// };\n"]},"metadata":{},"sourceType":"module"}