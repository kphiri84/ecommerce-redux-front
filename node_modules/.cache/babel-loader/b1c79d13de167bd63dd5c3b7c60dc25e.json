{"ast":null,"code":"import { FETCHING_CART, ADD_TO_CART_SUCCESS, CLEAR_ERROR_MESSAGE, FETCHING_CART_SUCCESS, FETCHING_CART_FAILURE, PAY_TOTAL_FAILURE, PAID_TOTAL_SUCCESSFULLY } from './types';\nimport axios from 'axios';\nimport CartService from '../services/cart.service';\nimport Cookie from \"js-cookie\";\nexport const fetchingCart = () => {\n  return {\n    type: FETCHING_CART\n  };\n};\nexport const addToCartSuccess = () => {\n  return {\n    type: ADD_TO_CART_SUCCESS,\n    message: 'Added to cart.'\n  };\n};\nexport const clearMessage = () => {\n  return {\n    type: CLEAR_ERROR_MESSAGE\n  };\n};\nexport const fetchingCartSuccess = cart => {\n  return {\n    type: FETCHING_CART_SUCCESS,\n    cart\n  };\n};\nexport const fetchingCartError = error => {\n  return {\n    type: FETCHING_CART_FAILURE,\n    error\n  };\n};\nexport const failedToPay = error => {\n  return {\n    type: PAY_TOTAL_FAILURE,\n    error\n  };\n};\nexport const successfullyPaid = () => {\n  return {\n    type: PAID_TOTAL_SUCCESSFULLY\n  };\n}; // export function addToCart (id) {\n// \treturn function (dispatch) {\n// \t  return axios.get(`http://localhost:3001/api/products/${id}`)\n// \t\t.then(res => {\n// \t\t  dispatch({\n// \t\t\ttype: ADD_TO_CART_SUCCESS,\n// \t\t\tcart : res.data\n// \t\t})\n// \t\t  return setTimeout(() => {\n// \t\t\tdispatch(clearMessage());\n// \t\t  }, 5000);\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t  let error = 'Could not add the product.';\n// \t\t  // if (err.response && err.response.data && err.response.data) {\n// \t\t  //   error = err.response.data;\n// \t\t  // }\n// \t\t  dispatch(fetchingCartError(error));\n// \t\t  return setTimeout(() => {\n// \t\t\tdispatch(clearMessage());\n// \t\t  }, 5000);\n// \t\t});\n// \t};\n//   }\n\nexport const addToCart = id => async (dispatch, getState) => {\n  try {\n    const {\n      data\n    } = await axios.get(`http://localhost:3001/api/products/${id}`);\n    dispatch({\n      type: ADD_TO_CART_SUCCESS,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price\n      }\n    });\n    const {\n      cart: {\n        cartItems\n      }\n    } = getState();\n    Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  } catch (error) {}\n};\nexport const fetchCart = () => dispatch => {\n  dispatch(fetchingCart());\n  return CartService.fetchCart().then(res => dispatch(fetchingCartSuccess(res.data[0]))).catch(err => {\n    let error = 'Could not get the cart infomation.'; // if (err.response && err.response.data && err.response.data) {\n    //   error = err.response.data;\n    // }\n\n    return dispatch(fetchingCartError(error));\n  });\n};\nexport const deletefromCart = id => dispatch => {\n  dispatch(fetchingCart());\n  return CartService.deletefromCart().then(res => dispatch(fetchingCartSuccess(res.data[0]))).catch(err => {\n    let error = 'Could not remove the product.'; // if (err.response && err.response.data && err.response.data) {\n    //   error = err.response.data;\n    // }\n\n    return dispatch(fetchingCartError(error));\n  });\n}; // export const payTotal = (cartObject) => (dispatch) => {\n// \treturn CartService.payTotal()\n// \t\t.then((res) => {\n// \t\t\tdispatch(successfullyPaid());\n// \t\t\treturn browserHistory.push('/account');\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tlet error = 'Could not purchase them.';\n// \t\t\t// if (err.response && err.response.data && err.response.data) {\n// \t\t\t//   error = err.response.data;\n// \t\t\t// }\n// \t\t\treturn dispatch(failedToPay(error));\n// \t\t});\n// };","map":{"version":3,"sources":["/home/kenny/ecommerce-front1/src/actions/cart.action.js"],"names":["FETCHING_CART","ADD_TO_CART_SUCCESS","CLEAR_ERROR_MESSAGE","FETCHING_CART_SUCCESS","FETCHING_CART_FAILURE","PAY_TOTAL_FAILURE","PAID_TOTAL_SUCCESSFULLY","axios","CartService","Cookie","fetchingCart","type","addToCartSuccess","message","clearMessage","fetchingCartSuccess","cart","fetchingCartError","error","failedToPay","successfullyPaid","addToCart","id","dispatch","getState","data","get","payload","product","_id","name","image","price","cartItems","set","JSON","stringify","fetchCart","then","res","catch","err","deletefromCart"],"mappings":"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","sourcesContent":["import {\n\tFETCHING_CART,\n\tADD_TO_CART_SUCCESS,\n\tCLEAR_ERROR_MESSAGE,\n\tFETCHING_CART_SUCCESS,\n\tFETCHING_CART_FAILURE,\n\tPAY_TOTAL_FAILURE,\n\tPAID_TOTAL_SUCCESSFULLY\n} from './types';\nimport axios from 'axios'\nimport CartService from '../services/cart.service';\nimport Cookie from \"js-cookie\";\n\nexport const fetchingCart = () => {\n\treturn {\n\t\ttype: FETCHING_CART\n\t};\n};\n\nexport const addToCartSuccess = () => {\n\treturn {\n\t\ttype: ADD_TO_CART_SUCCESS,\n\t\tmessage: 'Added to cart.'\n\t};\n};\n\nexport const clearMessage = () => {\n\treturn {\n\t\ttype: CLEAR_ERROR_MESSAGE\n\t};\n};\n\nexport const fetchingCartSuccess = (cart) => {\n\treturn {\n\t\ttype: FETCHING_CART_SUCCESS,\n\t\tcart\n\t};\n};\n\nexport const fetchingCartError = (error) => {\n\treturn {\n\t\ttype: FETCHING_CART_FAILURE,\n\t\terror\n\t};\n};\n\nexport const failedToPay = (error) => {\n\treturn {\n\t\ttype: PAY_TOTAL_FAILURE,\n\t\terror\n\t};\n};\n\nexport const successfullyPaid = () => {\n\treturn {\n\t\ttype: PAID_TOTAL_SUCCESSFULLY\n\t};\n};\n\n// export function addToCart (id) {\n// \treturn function (dispatch) {\n// \t  return axios.get(`http://localhost:3001/api/products/${id}`)\n// \t\t.then(res => {\n// \t\t  dispatch({\n// \t\t\ttype: ADD_TO_CART_SUCCESS,\n// \t\t\tcart : res.data\n// \t\t})\n// \t\t  return setTimeout(() => {\n// \t\t\tdispatch(clearMessage());\n// \t\t  }, 5000);\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t  let error = 'Could not add the product.';\n// \t\t  // if (err.response && err.response.data && err.response.data) {\n// \t\t  //   error = err.response.data;\n// \t\t  // }\n// \t\t  dispatch(fetchingCartError(error));\n// \t\t  return setTimeout(() => {\n// \t\t\tdispatch(clearMessage());\n// \t\t  }, 5000);\n// \t\t});\n// \t};\n//   }\n\n  export const addToCart = (id) => async (dispatch, getState) => {\n\ttry {\n\t  const { data } = await axios.get(`http://localhost:3001/api/products/${id}`);\n\t  dispatch({\n\t\ttype: ADD_TO_CART_SUCCESS, payload: {\n\t\t  product: data._id,\n\t\t  name: data.name,\n\t\t  image: data.image,\n\t\t  price: data.price,\n\t\t}\n\t  });\n\t  const { cart: { cartItems } } = getState();\n\t  Cookie.set(\"cartItems\", JSON.stringify(cartItems));\n  \n\t} catch (error) {\n  \n\t}\n  }\n\nexport const fetchCart = () => (dispatch) => {\n\tdispatch(fetchingCart());\n\treturn CartService.fetchCart()\n\t.then((res) => dispatch(fetchingCartSuccess(res.data[0])))\n\t.catch((err) => {\n\t\tlet error = 'Could not get the cart infomation.';\n\t\t// if (err.response && err.response.data && err.response.data) {\n\t\t//   error = err.response.data;\n\t\t// }\n\t\treturn dispatch(fetchingCartError(error));\n\t});\n};\n\nexport const deletefromCart = (id) => (dispatch) => {\n\tdispatch(fetchingCart());\n\treturn CartService.deletefromCart()\n\t.then((res) => dispatch(fetchingCartSuccess(res.data[0])))\n\t.catch((err) => {\n\t\tlet error = 'Could not remove the product.';\n\t\t// if (err.response && err.response.data && err.response.data) {\n\t\t//   error = err.response.data;\n\t\t// }\n\t\treturn dispatch(fetchingCartError(error));\n\t});\n};\n\n// export const payTotal = (cartObject) => (dispatch) => {\n// \treturn CartService.payTotal()\n// \t\t.then((res) => {\n// \t\t\tdispatch(successfullyPaid());\n// \t\t\treturn browserHistory.push('/account');\n// \t\t})\n// \t\t.catch((err) => {\n// \t\t\tlet error = 'Could not purchase them.';\n// \t\t\t// if (err.response && err.response.data && err.response.data) {\n// \t\t\t//   error = err.response.data;\n// \t\t\t// }\n// \t\t\treturn dispatch(failedToPay(error));\n// \t\t});\n// };\n"]},"metadata":{},"sourceType":"module"}